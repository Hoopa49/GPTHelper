{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://chatgpt-helper/./node_modules/dotenv/lib/main.js","webpack://chatgpt-helper/./src/extension.ts","webpack://chatgpt-helper/external commonjs \"vscode\"","webpack://chatgpt-helper/external node-commonjs \"buffer\"","webpack://chatgpt-helper/external node-commonjs \"crypto\"","webpack://chatgpt-helper/external node-commonjs \"fs\"","webpack://chatgpt-helper/external node-commonjs \"node:buffer\"","webpack://chatgpt-helper/external node-commonjs \"node:fs\"","webpack://chatgpt-helper/external node-commonjs \"node:http\"","webpack://chatgpt-helper/external node-commonjs \"node:https\"","webpack://chatgpt-helper/external node-commonjs \"node:net\"","webpack://chatgpt-helper/external node-commonjs \"node:path\"","webpack://chatgpt-helper/external node-commonjs \"node:process\"","webpack://chatgpt-helper/external node-commonjs \"node:stream\"","webpack://chatgpt-helper/external node-commonjs \"node:stream/web\"","webpack://chatgpt-helper/external node-commonjs \"node:url\"","webpack://chatgpt-helper/external node-commonjs \"node:util\"","webpack://chatgpt-helper/external node-commonjs \"node:zlib\"","webpack://chatgpt-helper/external node-commonjs \"os\"","webpack://chatgpt-helper/external node-commonjs \"path\"","webpack://chatgpt-helper/external node-commonjs \"worker_threads\"","webpack://chatgpt-helper/webpack/bootstrap","webpack://chatgpt-helper/webpack/runtime/define property getters","webpack://chatgpt-helper/webpack/runtime/ensure chunk","webpack://chatgpt-helper/webpack/runtime/get javascript chunk filename","webpack://chatgpt-helper/webpack/runtime/hasOwnProperty shorthand","webpack://chatgpt-helper/webpack/runtime/make namespace object","webpack://chatgpt-helper/webpack/runtime/require chunk loading","webpack://chatgpt-helper/webpack/before-startup","webpack://chatgpt-helper/webpack/startup","webpack://chatgpt-helper/webpack/after-startup"],"sourcesContent":["const fs = require('fs')\nconst path = require('path')\nconst os = require('os')\nconst crypto = require('crypto')\nconst packageJson = require('../package.json')\n\nconst version = packageJson.version\n\nconst LINE = /(?:^|^)\\s*(?:export\\s+)?([\\w.-]+)(?:\\s*=\\s*?|:\\s+?)(\\s*'(?:\\\\'|[^'])*'|\\s*\"(?:\\\\\"|[^\"])*\"|\\s*`(?:\\\\`|[^`])*`|[^#\\r\\n]+)?\\s*(?:#.*)?(?:$|$)/mg\n\n// Parse src into an Object\nfunction parse (src) {\n  const obj = {}\n\n  // Convert buffer to string\n  let lines = src.toString()\n\n  // Convert line breaks to same format\n  lines = lines.replace(/\\r\\n?/mg, '\\n')\n\n  let match\n  while ((match = LINE.exec(lines)) != null) {\n    const key = match[1]\n\n    // Default undefined or null to empty string\n    let value = (match[2] || '')\n\n    // Remove whitespace\n    value = value.trim()\n\n    // Check if double quoted\n    const maybeQuote = value[0]\n\n    // Remove surrounding quotes\n    value = value.replace(/^(['\"`])([\\s\\S]*)\\1$/mg, '$2')\n\n    // Expand newlines if double quoted\n    if (maybeQuote === '\"') {\n      value = value.replace(/\\\\n/g, '\\n')\n      value = value.replace(/\\\\r/g, '\\r')\n    }\n\n    // Add to object\n    obj[key] = value\n  }\n\n  return obj\n}\n\nfunction _parseVault (options) {\n  const vaultPath = _vaultPath(options)\n\n  // Parse .env.vault\n  const result = DotenvModule.configDotenv({ path: vaultPath })\n  if (!result.parsed) {\n    const err = new Error(`MISSING_DATA: Cannot parse ${vaultPath} for an unknown reason`)\n    err.code = 'MISSING_DATA'\n    throw err\n  }\n\n  // handle scenario for comma separated keys - for use with key rotation\n  // example: DOTENV_KEY=\"dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=prod,dotenv://:key_7890@dotenvx.com/vault/.env.vault?environment=prod\"\n  const keys = _dotenvKey(options).split(',')\n  const length = keys.length\n\n  let decrypted\n  for (let i = 0; i < length; i++) {\n    try {\n      // Get full key\n      const key = keys[i].trim()\n\n      // Get instructions for decrypt\n      const attrs = _instructions(result, key)\n\n      // Decrypt\n      decrypted = DotenvModule.decrypt(attrs.ciphertext, attrs.key)\n\n      break\n    } catch (error) {\n      // last key\n      if (i + 1 >= length) {\n        throw error\n      }\n      // try next key\n    }\n  }\n\n  // Parse decrypted .env string\n  return DotenvModule.parse(decrypted)\n}\n\nfunction _log (message) {\n  console.log(`[dotenv@${version}][INFO] ${message}`)\n}\n\nfunction _warn (message) {\n  console.log(`[dotenv@${version}][WARN] ${message}`)\n}\n\nfunction _debug (message) {\n  console.log(`[dotenv@${version}][DEBUG] ${message}`)\n}\n\nfunction _dotenvKey (options) {\n  // prioritize developer directly setting options.DOTENV_KEY\n  if (options && options.DOTENV_KEY && options.DOTENV_KEY.length > 0) {\n    return options.DOTENV_KEY\n  }\n\n  // secondary infra already contains a DOTENV_KEY environment variable\n  if (process.env.DOTENV_KEY && process.env.DOTENV_KEY.length > 0) {\n    return process.env.DOTENV_KEY\n  }\n\n  // fallback to empty string\n  return ''\n}\n\nfunction _instructions (result, dotenvKey) {\n  // Parse DOTENV_KEY. Format is a URI\n  let uri\n  try {\n    uri = new URL(dotenvKey)\n  } catch (error) {\n    if (error.code === 'ERR_INVALID_URL') {\n      const err = new Error('INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=development')\n      err.code = 'INVALID_DOTENV_KEY'\n      throw err\n    }\n\n    throw error\n  }\n\n  // Get decrypt key\n  const key = uri.password\n  if (!key) {\n    const err = new Error('INVALID_DOTENV_KEY: Missing key part')\n    err.code = 'INVALID_DOTENV_KEY'\n    throw err\n  }\n\n  // Get environment\n  const environment = uri.searchParams.get('environment')\n  if (!environment) {\n    const err = new Error('INVALID_DOTENV_KEY: Missing environment part')\n    err.code = 'INVALID_DOTENV_KEY'\n    throw err\n  }\n\n  // Get ciphertext payload\n  const environmentKey = `DOTENV_VAULT_${environment.toUpperCase()}`\n  const ciphertext = result.parsed[environmentKey] // DOTENV_VAULT_PRODUCTION\n  if (!ciphertext) {\n    const err = new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${environmentKey} in your .env.vault file.`)\n    err.code = 'NOT_FOUND_DOTENV_ENVIRONMENT'\n    throw err\n  }\n\n  return { ciphertext, key }\n}\n\nfunction _vaultPath (options) {\n  let possibleVaultPath = null\n\n  if (options && options.path && options.path.length > 0) {\n    if (Array.isArray(options.path)) {\n      for (const filepath of options.path) {\n        if (fs.existsSync(filepath)) {\n          possibleVaultPath = filepath.endsWith('.vault') ? filepath : `${filepath}.vault`\n        }\n      }\n    } else {\n      possibleVaultPath = options.path.endsWith('.vault') ? options.path : `${options.path}.vault`\n    }\n  } else {\n    possibleVaultPath = path.resolve(process.cwd(), '.env.vault')\n  }\n\n  if (fs.existsSync(possibleVaultPath)) {\n    return possibleVaultPath\n  }\n\n  return null\n}\n\nfunction _resolveHome (envPath) {\n  return envPath[0] === '~' ? path.join(os.homedir(), envPath.slice(1)) : envPath\n}\n\nfunction _configVault (options) {\n  _log('Loading env from encrypted .env.vault')\n\n  const parsed = DotenvModule._parseVault(options)\n\n  let processEnv = process.env\n  if (options && options.processEnv != null) {\n    processEnv = options.processEnv\n  }\n\n  DotenvModule.populate(processEnv, parsed, options)\n\n  return { parsed }\n}\n\nfunction configDotenv (options) {\n  const dotenvPath = path.resolve(process.cwd(), '.env')\n  let encoding = 'utf8'\n  const debug = Boolean(options && options.debug)\n\n  if (options && options.encoding) {\n    encoding = options.encoding\n  } else {\n    if (debug) {\n      _debug('No encoding is specified. UTF-8 is used by default')\n    }\n  }\n\n  let optionPaths = [dotenvPath] // default, look for .env\n  if (options && options.path) {\n    if (!Array.isArray(options.path)) {\n      optionPaths = [_resolveHome(options.path)]\n    } else {\n      optionPaths = [] // reset default\n      for (const filepath of options.path) {\n        optionPaths.push(_resolveHome(filepath))\n      }\n    }\n  }\n\n  // Build the parsed data in a temporary object (because we need to return it).  Once we have the final\n  // parsed data, we will combine it with process.env (or options.processEnv if provided).\n  let lastError\n  const parsedAll = {}\n  for (const path of optionPaths) {\n    try {\n      // Specifying an encoding returns a string instead of a buffer\n      const parsed = DotenvModule.parse(fs.readFileSync(path, { encoding }))\n\n      DotenvModule.populate(parsedAll, parsed, options)\n    } catch (e) {\n      if (debug) {\n        _debug(`Failed to load ${path} ${e.message}`)\n      }\n      lastError = e\n    }\n  }\n\n  let processEnv = process.env\n  if (options && options.processEnv != null) {\n    processEnv = options.processEnv\n  }\n\n  DotenvModule.populate(processEnv, parsedAll, options)\n\n  if (lastError) {\n    return { parsed: parsedAll, error: lastError }\n  } else {\n    return { parsed: parsedAll }\n  }\n}\n\n// Populates process.env from .env file\nfunction config (options) {\n  // fallback to original dotenv if DOTENV_KEY is not set\n  if (_dotenvKey(options).length === 0) {\n    return DotenvModule.configDotenv(options)\n  }\n\n  const vaultPath = _vaultPath(options)\n\n  // dotenvKey exists but .env.vault file does not exist\n  if (!vaultPath) {\n    _warn(`You set DOTENV_KEY but you are missing a .env.vault file at ${vaultPath}. Did you forget to build it?`)\n\n    return DotenvModule.configDotenv(options)\n  }\n\n  return DotenvModule._configVault(options)\n}\n\nfunction decrypt (encrypted, keyStr) {\n  const key = Buffer.from(keyStr.slice(-64), 'hex')\n  let ciphertext = Buffer.from(encrypted, 'base64')\n\n  const nonce = ciphertext.subarray(0, 12)\n  const authTag = ciphertext.subarray(-16)\n  ciphertext = ciphertext.subarray(12, -16)\n\n  try {\n    const aesgcm = crypto.createDecipheriv('aes-256-gcm', key, nonce)\n    aesgcm.setAuthTag(authTag)\n    return `${aesgcm.update(ciphertext)}${aesgcm.final()}`\n  } catch (error) {\n    const isRange = error instanceof RangeError\n    const invalidKeyLength = error.message === 'Invalid key length'\n    const decryptionFailed = error.message === 'Unsupported state or unable to authenticate data'\n\n    if (isRange || invalidKeyLength) {\n      const err = new Error('INVALID_DOTENV_KEY: It must be 64 characters long (or more)')\n      err.code = 'INVALID_DOTENV_KEY'\n      throw err\n    } else if (decryptionFailed) {\n      const err = new Error('DECRYPTION_FAILED: Please check your DOTENV_KEY')\n      err.code = 'DECRYPTION_FAILED'\n      throw err\n    } else {\n      throw error\n    }\n  }\n}\n\n// Populate process.env with parsed values\nfunction populate (processEnv, parsed, options = {}) {\n  const debug = Boolean(options && options.debug)\n  const override = Boolean(options && options.override)\n\n  if (typeof parsed !== 'object') {\n    const err = new Error('OBJECT_REQUIRED: Please check the processEnv argument being passed to populate')\n    err.code = 'OBJECT_REQUIRED'\n    throw err\n  }\n\n  // Set process.env\n  for (const key of Object.keys(parsed)) {\n    if (Object.prototype.hasOwnProperty.call(processEnv, key)) {\n      if (override === true) {\n        processEnv[key] = parsed[key]\n      }\n\n      if (debug) {\n        if (override === true) {\n          _debug(`\"${key}\" is already defined and WAS overwritten`)\n        } else {\n          _debug(`\"${key}\" is already defined and was NOT overwritten`)\n        }\n      }\n    } else {\n      processEnv[key] = parsed[key]\n    }\n  }\n}\n\nconst DotenvModule = {\n  configDotenv,\n  _configVault,\n  _parseVault,\n  config,\n  decrypt,\n  parse,\n  populate\n}\n\nmodule.exports.configDotenv = DotenvModule.configDotenv\nmodule.exports._configVault = DotenvModule._configVault\nmodule.exports._parseVault = DotenvModule._parseVault\nmodule.exports.config = DotenvModule.config\nmodule.exports.decrypt = DotenvModule.decrypt\nmodule.exports.parse = DotenvModule.parse\nmodule.exports.populate = DotenvModule.populate\n\nmodule.exports = DotenvModule\n","import * as vscode from \"vscode\";\nimport * as path from \"path\";\nimport * as fs from \"fs\";\nimport * as dotenv from \"dotenv\";\n\ndotenv.config({ path: path.resolve(__dirname, \"../.env\") });\n\nexport function activate(context: vscode.ExtensionContext) {\n  if (!context.subscriptions) {\n    console.error(\n      \"Контекст расширения не найден или подписки не инициализированы.\"\n    );\n    return;\n  }\n\n  console.log(\"Активировано расширение ChatGPT Helper\");\n\n  const viewProvider = new ChatGPTViewProvider(context);\n\n  context.subscriptions.push(\n    vscode.window.registerWebviewViewProvider(\n      ChatGPTViewProvider.viewType,\n      viewProvider,\n      {\n        webviewOptions: { retainContextWhenHidden: true },\n      }\n    )\n  );\n\n  console.log(\"ChatGPTViewProvider зарегистрирован\");\n}\n\nclass ChatGPTViewProvider implements vscode.WebviewViewProvider {\n  public static readonly viewType = \"chatgpt-helper.chatgptView\";\n  private _view?: vscode.WebviewView;\n  private selectedFiles: vscode.Uri[] = [];\n\n  constructor(private readonly _context: vscode.ExtensionContext) {\n    console.log(\"Создан ChatGPTViewProvider\");\n  }\n\n  public resolveWebviewView(\n    webviewView: vscode.WebviewView,\n    _context: vscode.WebviewViewResolveContext,\n    _token: vscode.CancellationToken\n  ) {\n    console.log(\"Инициализация Webview началась\");\n    this._view = webviewView;\n\n    webviewView.webview.options = {\n      enableScripts: true,\n      localResourceRoots: [\n        vscode.Uri.joinPath(this._context.extensionUri, \"resources\"),\n      ],\n    };\n\n    webviewView.webview.html = this.getHtmlContent(webviewView);\n    console.log(\"HTML успешно передан Webview\");\n\n    webviewView.webview.onDidReceiveMessage((message) =>\n      this.handleWebviewMessage(message)\n    );\n  }\n\n  private getHtmlContent(webviewView: vscode.WebviewView): string {\n    const htmlPath = vscode.Uri.joinPath(\n      this._context.extensionUri,\n      \"resources\",\n      \"chatgpt-helper.html\"\n    );\n    let htmlContent = fs.readFileSync(htmlPath.fsPath, \"utf8\");\n\n    const resourceUris = {\n      chatgptHelperCssUri: webviewView.webview.asWebviewUri(\n        vscode.Uri.joinPath(\n          this._context.extensionUri,\n          \"resources\",\n          \"chatgpt-helper.css\"\n        )\n      ),\n      chatgptHelperJsUri: webviewView.webview.asWebviewUri(\n        vscode.Uri.joinPath(\n          this._context.extensionUri,\n          \"resources\",\n          \"chatgpt-helper.js\"\n        )\n      ),\n      attachIconUri: webviewView.webview.asWebviewUri(\n        vscode.Uri.file(\n          path.join(this._context.extensionPath, \"resources\", \"attach.svg\")\n        )\n      ),\n      deleteIconUri: webviewView.webview.asWebviewUri(\n        vscode.Uri.file(\n          path.join(this._context.extensionPath, \"resources\", \"delete.svg\")\n        )\n      ),\n      playIconUri: webviewView.webview.asWebviewUri(\n        vscode.Uri.file(\n          path.join(this._context.extensionPath, \"resources\", \"play.png\")\n        )\n      ),\n    };\n\n    for (const [key, uri] of Object.entries(resourceUris)) {\n      htmlContent = htmlContent.replace(`{{${key}}}`, uri.toString());\n    }\n\n    return htmlContent;\n  }\n\n  private async handleWebviewMessage(message: any) {\n    switch (message.type) {\n      case \"analyzeAndChat\":\n        return this.processChatRequest(message);\n      case \"selectFiles\":\n        return this.selectFilesHandler();\n      case \"removeFile\":\n        return this.removeFileHandler(message.index);\n      default:\n        console.error(`Неизвестный тип сообщения: ${message.type}`);\n    }\n  }\n\n  private async processChatRequest(message: any) {\n    if (!message.text) return;\n\n    console.log(`Получен запрос от пользователя: ${message.text}`);\n\n    try {\n      const repositoryContent = this.analyzeSelectedFiles(this.selectedFiles);\n      let prompt = `Вот содержимое выбранных файлов:\\n${repositoryContent}\\n\\nТеперь ответь на следующий вопрос:\\n${message.text}`;\n\n      if (prompt.length > 4096) {\n        console.warn(\"Prompt слишком длинный, сокращаем до 4096 символов.\");\n        prompt = prompt.substring(0, 4096);\n      }\n\n      const response = await this.getChatGPTResponse(prompt);\n      console.log(`Ответ от ChatGPT: ${response}`);\n\n      this._view?.webview.postMessage({\n        type: \"chatgptResponse\",\n        text: response,\n      });\n    } catch (error) {\n      console.error(\"Ошибка при запросе к OpenAI API:\", error);\n      this._view?.webview.postMessage({\n        type: \"chatgptResponse\",\n        text: \"Ошибка при запросе к OpenAI API\",\n      });\n    }\n  }\n\n  private async selectFilesHandler() {\n    try {\n      this.selectedFiles = await this.selectFiles();\n      console.log(\"Выбранные файлы:\", this.selectedFiles);\n      this._view?.webview.postMessage({\n        type: \"selectedFiles\",\n        files: this.selectedFiles.map((file) => file.fsPath),\n      });\n    } catch (error) {\n      console.error(\"Ошибка при выборе файлов:\", error);\n    }\n  }\n\n  private removeFileHandler(index: number) {\n    if (index >= 0 && index < this.selectedFiles.length) {\n      this.selectedFiles.splice(index, 1);\n      console.log(\n        \"Файл удалён, обновлённый список файлов:\",\n        this.selectedFiles\n      );\n      this._view?.webview.postMessage({\n        type: \"selectedFiles\",\n        files: this.selectedFiles.map((file) => file.fsPath),\n      });\n    } else {\n      console.error(\"Неверный индекс файла для удаления:\", index);\n    }\n  }\n\n  private async selectFiles(): Promise<vscode.Uri[]> {\n    const options: vscode.OpenDialogOptions = {\n      canSelectMany: true,\n      openLabel: \"Выберите файлы\",\n      canSelectFiles: true,\n      canSelectFolders: false,\n    };\n    return (await vscode.window.showOpenDialog(options)) || [];\n  }\n\n  private analyzeSelectedFiles(files: vscode.Uri[]): string {\n    return files\n      .map((file) => {\n        const filePath = file.fsPath;\n        try {\n          if (fs.statSync(filePath).isFile()) {\n            const fileContent = fs.readFileSync(filePath, \"utf8\");\n            return `\\n--- [Файл] ${path.basename(filePath)} ---\\n${\n              fileContent.length > 1000\n                ? `${fileContent.substring(\n                    0,\n                    1000\n                  )}\\n...\\n[Содержимое файла сокращено]\\n`\n                : fileContent\n            }`;\n          }\n        } catch (error) {\n          console.error(`Ошибка при чтении файла ${filePath}:`, error);\n          return \"[Ошибка при чтении файла]\\n\";\n        }\n        return \"\";\n      })\n      .join(\"\\n\");\n  }\n\n  private async getChatGPTResponse(prompt: string): Promise<string> {\n    const apiKey = process.env.OPENAI_API_KEY;\n\n    if (!apiKey) {\n      console.error(\"API ключ для OpenAI не найден.\");\n      return \"API ключ не найден. Проверьте ваш файл .env.\";\n    }\n\n    const fetch = (await import(\"node-fetch\")).default;\n    const url = \"https://api.openai.com/v1/chat/completions\";\n\n    try {\n      const response = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${apiKey}`,\n        },\n        body: JSON.stringify({\n          model: \"gpt-3.5-turbo\",\n          messages: [\n            { role: \"system\", content: \"You are a helpful assistant.\" },\n            { role: \"user\", content: prompt },\n          ],\n          max_tokens: 500,\n        }),\n      });\n\n      if (!response.ok) {\n        console.error(\n          \"Ошибка при запросе к OpenAI API. Код ответа:\",\n          response.status,\n          response.statusText\n        );\n        return `Ошибка при запросе к OpenAI API: ${response.statusText}`;\n      }\n\n      const data: any = await response.json();\n      return data.choices?.[0]?.message.content.trim() ?? \"Нет ответа.\";\n    } catch (error) {\n      console.error(\"Ошибка при выполнении запроса к OpenAI API:\", error);\n      return \"Ошибка при выполнении запроса к OpenAI API.\";\n    }\n  }\n}\n\nexport function deactivate() {\n  console.log(\"Деактивация ChatGPT Helper\");\n}\n","module.exports = require(\"vscode\");","module.exports = require(\"buffer\");","module.exports = require(\"crypto\");","module.exports = require(\"fs\");","module.exports = require(\"node:buffer\");","module.exports = require(\"node:fs\");","module.exports = require(\"node:http\");","module.exports = require(\"node:https\");","module.exports = require(\"node:net\");","module.exports = require(\"node:path\");","module.exports = require(\"node:process\");","module.exports = require(\"node:stream\");","module.exports = require(\"node:stream/web\");","module.exports = require(\"node:url\");","module.exports = require(\"node:util\");","module.exports = require(\"node:zlib\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"worker_threads\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".extension.js\";\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"loaded\", otherwise not loaded yet\nvar installedChunks = {\n\t\"main\": 1\n};\n\n// no on chunks loaded\n\nvar installChunk = (chunk) => {\n\tvar moreModules = chunk.modules, chunkIds = chunk.ids, runtime = chunk.runtime;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tfor(var i = 0; i < chunkIds.length; i++)\n\t\tinstalledChunks[chunkIds[i]] = 1;\n\n};\n\n// require() chunk loading for javascript\n__webpack_require__.f.require = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\tinstallChunk(require(\"./\" + __webpack_require__.u(chunkId)));\n\t\t} else installedChunks[chunkId] = 1;\n\t}\n};\n\n// no external install chunk\n\n// no HMR\n\n// no HMR manifest","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/extension.ts\");\n",""],"names":[],"sourceRoot":""}